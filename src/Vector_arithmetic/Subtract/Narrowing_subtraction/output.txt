"Vector arithmetic / Subtract / Narrowing subtraction" の intrinsic 関数 サンプルコード
[vhsub_u16]
[0] ( 32766 - 1) >> 1 = 16382
[1] ( 1 - 2) >> 1 = 65535
[2] ( 65534 - 1) >> 1 = 32766
[3] ( 65535 - 1) >> 1 = 32767

[vhsub_s16]
[0] ( 0 - -1) >> 1 = 0
[1] ( -1 - 1) >> 1 = -1
[2] ( -32768 - 1) >> 1 = -16385
[3] ( 32767 - -1) >> 1 = 16384

[vhsubq_u16]
[0] ( 32766 - 1) >> 1 = 16382
[1] ( 1 - 2) >> 1 = 65535
[2] ( 65534 - 1) >> 1 = 32766
[3] ( 65535 - 1) >> 1 = 32767
[4] ( 2 - 0) >> 1 = 1
[5] ( 2 - 1) >> 1 = 0
[6] ( 2 - 65534) >> 1 = 32770
[7] ( 2 - 65535) >> 1 = 32769

[vhsubq_s16]
[0] ( 0 - -1) >> 1 = 0
[1] ( -1 - 1) >> 1 = -1
[2] ( -32768 - 1) >> 1 = -16385
[3] ( 32767 - -1) >> 1 = 16384
[4] ( -2 - 0) >> 1 = -1
[5] ( 2 - -1) >> 1 = 1
[6] ( -32768 - 32767) >> 1 = -32768
[7] ( 32767 - -32768) >> 1 = 32767

[vsubhn_u16]
[0] ( 65535 - 1 ) >> 8 = 255
[1] ( 256 - 1 ) >> 8 = 0
[2] ( 65280 - 1 ) >> 8 = 254
[3] ( 0 - 1 ) >> 8 = 255
[4] ( 65280 - 256 ) >> 8 = 254
[5] ( 65280 - 255 ) >> 8 = 254
[6] ( 65535 - 127 ) >> 8 = 255
[7] ( 65535 - 128 ) >> 8 = 255

[vsubhn_high_u16]
[0] 255
[1] 0
[2] 254
[3] 255
[4] 254
[5] 254
[6] 255
[7] 255
[8] ( 256 - 128 ) >> 8 = 0
[9] ( 256 - 256 ) >> 8 = 0
[10] ( 512 - 128 ) >> 8 = 1
[11] ( 512 - 256 ) >> 8 = 1
[12] ( 1024 - 128 ) >> 8 = 3
[13] ( 1024 - 256 ) >> 8 = 3
[14] ( 2048 - 128 ) >> 8 = 7
[15] ( 2048 - 256 ) >> 8 = 7

[vsubhn_s16]
[0] ( -1 - 1 ) >> 8 = -1
[1] ( 256 - 1 ) >> 8 = 0
[2] ( 32512 - 1 ) >> 8 = 126
[3] ( 0 - 1 ) >> 8 = -1
[4] ( 32767 - 127 ) >> 8 = 127
[5] ( 32767 - 128 ) >> 8 = 127
[6] ( -1 - 127 ) >> 8 = -1
[7] ( -1 - 128 ) >> 8 = -1

[vsubhn_high_s16]
[0] -1
[1] 0
[2] 126
[3] -1
[4] 127
[5] 127
[6] -1
[7] -1
[8] ( 256 - 128 ) >> 8 = 0
[9] ( 256 - 256 ) >> 8 = 0
[10] ( 512 - 128 ) >> 8 = 1
[11] ( 512 - 256 ) >> 8 = 1
[12] ( 1024 - 128 ) >> 8 = 3
[13] ( 1024 - 256 ) >> 8 = 3
[14] ( 2048 - 128 ) >> 8 = 7
[15] ( 2048 - 256 ) >> 8 = 7

[vrsubhn_u16]
[0] (( 65535 - 1 ) + 128) >> 8 = 0
[1] (( 256 - 1 ) + 128) >> 8 = 1
[2] (( 65280 - 1 ) + 128) >> 8 = 255
[3] (( 0 - 1 ) + 128) >> 8 = 0
[4] (( 65280 - 256 ) + 128) >> 8 = 254
[5] (( 65280 - 255 ) + 128) >> 8 = 254
[6] (( 65535 - 127 ) + 128) >> 8 = 0
[7] (( 65535 - 128 ) + 128) >> 8 = 255

[vrsubhn_high_u16]
[0] 0
[1] 1
[2] 255
[3] 0
[4] 254
[5] 254
[6] 0
[7] 255
[8] (( 256 - 128 ) + 128) >> 8 = 1
[9] (( 256 - 256 ) + 128) >> 8 = 0
[10] (( 512 - 128 ) + 128) >> 8 = 2
[11] (( 512 - 256 ) + 128) >> 8 = 1
[12] (( 1024 - 128 ) + 128) >> 8 = 4
[13] (( 1024 - 256 ) + 128) >> 8 = 3
[14] (( 2048 - 128 ) + 128) >> 8 = 8
[15] (( 2048 - 256 ) + 128) >> 8 = 7

[vrsubhn_s16]
[0] (( -1 - 1 ) + 128) >> 8 = 0
[1] (( 256 - 1 ) + 128) >> 8 = 1
[2] (( 32512 - 1 ) + 128) >> 8 = 127
[3] (( 0 - 1 ) + 128) >> 8 = 0
[4] (( 32767 - 127 ) + 128) >> 8 = -128
[5] (( 32767 - 128 ) + 128) >> 8 = 127
[6] (( -1 - 127 ) + 128) >> 8 = 0
[7] (( -1 - 128 ) + 128) >> 8 = -1

[vrsubhn_high_s16]
[0] 0
[1] 1
[2] 127
[3] 0
[4] -128
[5] 127
[6] 0
[7] -1
[8] (( 256 - 128 ) + 128) >> 8 = 1
[9] (( 256 - 256 ) + 128) >> 8 = 0
[10] (( 512 - 128 ) + 128) >> 8 = 2
[11] (( 512 - 256 ) + 128) >> 8 = 1
[12] (( 1024 - 128 ) + 128) >> 8 = 4
[13] (( 1024 - 256 ) + 128) >> 8 = 3
[14] (( 2048 - 128 ) + 128) >> 8 = 8
[15] (( 2048 - 256 ) + 128) >> 8 = 7

