"Vector arithmetic / Add / Narrowing addition" の intrinsic 関数 サンプルコード
[vhadd_u16]
[0] ( 32766 + 1) >> 1 = 16383
[1] ( 1 + 1) >> 1 = 1
[2] ( 65534 + 1) >> 1 = 32767
[3] ( 65535 + 1) >> 1 = 32768

[vhadd_s16]
[0] ( 0 + -1) >> 1 = -1
[1] ( -1 + 1) >> 1 = 0
[2] ( 32767 + 1) >> 1 = 16384
[3] ( -32768 + -1) >> 1 = -16385

[vhaddq_u16]
[0] ( 32766 + 1) >> 1 = 16383
[1] ( 1 + 1) >> 1 = 1
[2] ( 65534 + 1) >> 1 = 32767
[3] ( 65535 + 1) >> 1 = 32768
[4] ( 2 + 0) >> 1 = 1
[5] ( 2 + 1) >> 1 = 1
[6] ( 2 + 65534) >> 1 = 32768
[7] ( 2 + 65535) >> 1 = 32768

[vhaddq_s16]
[0] ( 0 + -1) >> 1 = -1
[1] ( -1 + 1) >> 1 = 0
[2] ( 32767 + 1) >> 1 = 16384
[3] ( -32768 + -1) >> 1 = -16385
[4] ( -2 + 0) >> 1 = -1
[5] ( 2 + -1) >> 1 = 0
[6] ( 2 + 32767) >> 1 = 16384
[7] ( -2 + -32768) >> 1 = -16385

[vrhadd_u16]
[0] (( 32766 + 1) + 1) >> 1 = 16384
[1] (( 1 + 1) + 1) >> 1 = 1
[2] (( 65534 + 1) + 1) >> 1 = 32768
[3] (( 65535 + 1) + 1) >> 1 = 32768

[vrhadd_s16]
[0] (( 0 + -1) + 1) >> 1 = 0
[1] (( -1 + 1) + 1) >> 1 = 0
[2] (( 32767 + 1) + 1) >> 1 = 16384
[3] (( -32768 + -1) + 1) >> 1 = -16384

[vrhaddq_u16]
[0] (( 32766 + 1) + 1) >> 1 = 16384
[1] (( 1 + 1) + 1) >> 1 = 1
[2] (( 65534 + 1) + 1) >> 1 = 32768
[3] (( 65535 + 1) + 1) >> 1 = 32768
[4] (( 2 + 0) + 1) >> 1 = 1
[5] (( 2 + 1) + 1) >> 1 = 2
[6] (( 2 + 65534) + 1) >> 1 = 32768
[7] (( 2 + 65535) + 1) >> 1 = 32769

[vrhaddq_s16]
[0] (( 0 + -1) + 1) >> 1 = 0
[1] (( -1 + 1) + 1) >> 1 = 0
[2] (( 32767 + 1) + 1) >> 1 = 16384
[3] (( -32768 + -1) + 1) >> 1 = -16384
[4] (( -2 + 0) + 1) >> 1 = -1
[5] (( 2 + -1) + 1) >> 1 = 1
[6] (( 2 + 32767) + 1) >> 1 = 16385
[7] (( -2 + -32768) + 1) >> 1 = -16385

[vaddhn_u16]
[0] ( 0 + 256 ) >> 8 = 1
[1] ( 65024 + 256 ) >> 8 = 255
[2] ( 65280 + 256 ) >> 8 = 0
[3] ( 1 + 1 ) >> 8 = 0
[4] ( 1 + 254 ) >> 8 = 0
[5] ( 1 + 255 ) >> 8 = 1
[6] ( 64 + 64 ) >> 8 = 0
[7] ( 65280 + 128 ) >> 8 = 255

[vaddhn_high_u16]
[0] 1
[1] 255
[2] 0
[3] 0
[4] 0
[5] 1
[6] 0
[7] 255
[8] ( 256 + 128 ) >> 8 = 1
[9] ( 256 + 256 ) >> 8 = 2
[10] ( 512 + 128 ) >> 8 = 2
[11] ( 512 + 256 ) >> 8 = 3
[12] ( 1024 + 128 ) >> 8 = 4
[13] ( 1024 + 256 ) >> 8 = 5
[14] ( 2048 + 128 ) >> 8 = 8
[15] ( 2048 + 256 ) >> 8 = 9

[vaddhn_s16]
[0] ( 0 + 256 ) >> 8 = 1
[1] ( -512 + 256 ) >> 8 = -1
[2] ( -256 + 256 ) >> 8 = 0
[3] ( 1 + 1 ) >> 8 = 0
[4] ( 1 + 254 ) >> 8 = 0
[5] ( 1 + 255 ) >> 8 = 1
[6] ( 64 + 64 ) >> 8 = 0
[7] ( -256 + 128 ) >> 8 = -1

[vaddhn_high_s16]
[0] 1
[1] -1
[2] 0
[3] 0
[4] 0
[5] 1
[6] 0
[7] -1
[8] ( 256 + 128 ) >> 8 = 1
[9] ( 256 + 256 ) >> 8 = 2
[10] ( 512 + 128 ) >> 8 = 2
[11] ( 512 + 256 ) >> 8 = 3
[12] ( 1024 + 128 ) >> 8 = 4
[13] ( 1024 + 256 ) >> 8 = 5
[14] ( 2048 + 128 ) >> 8 = 8
[15] ( 2048 + 256 ) >> 8 = 9

[vraddhn_u16]
[0] (( 0 + 256 ) + 128) >> 8 = 1
[1] (( 65024 + 256 ) + 128) >> 8 = 255
[2] (( 65280 + 256 ) + 128) >> 8 = 0
[3] (( 1 + 1 ) + 128) >> 8 = 0
[4] (( 1 + 254 ) + 128) >> 8 = 1
[5] (( 1 + 255 ) + 128) >> 8 = 1
[6] (( 64 + 64 ) + 128) >> 8 = 1
[7] (( 65280 + 128 ) + 128) >> 8 = 0

[vraddhn_high_u16]
[0] 1
[1] 255
[2] 0
[3] 0
[4] 1
[5] 1
[6] 1
[7] 0
[8] (( 256 + 128 ) + 128) >> 8 = 2
[9] (( 256 + 256 ) + 128) >> 8 = 2
[10] (( 512 + 128 ) + 128) >> 8 = 3
[11] (( 512 + 256 ) + 128) >> 8 = 3
[12] (( 1024 + 128 ) + 128) >> 8 = 5
[13] (( 1024 + 256 ) + 128) >> 8 = 5
[14] (( 2048 + 128 ) + 128) >> 8 = 9
[15] (( 2048 + 256 ) + 128) >> 8 = 9

[vraddhn_s16]
[0] (( 0 + 256 ) + 128) >> 8 = 1
[1] (( -512 + 256 ) + 128) >> 8 = -1
[2] (( -256 + 256 ) + 128) >> 8 = 0
[3] (( 1 + 1 ) + 128) >> 8 = 0
[4] (( 1 + 254 ) + 128) >> 8 = 1
[5] (( 1 + 255 ) + 128) >> 8 = 1
[6] (( 64 + 64 ) + 128) >> 8 = 1
[7] (( -256 + 128 ) + 128) >> 8 = 0

[vraddhn_high_s16]
[0] 1
[1] -1
[2] 0
[3] 0
[4] 1
[5] 1
[6] 1
[7] 0
[8] (( 256 + 128 ) + 128) >> 8 = 2
[9] (( 256 + 256 ) + 128) >> 8 = 2
[10] (( 512 + 128 ) + 128) >> 8 = 3
[11] (( 512 + 256 ) + 128) >> 8 = 3
[12] (( 1024 + 128 ) + 128) >> 8 = 5
[13] (( 1024 + 256 ) + 128) >> 8 = 5
[14] (( 2048 + 128 ) + 128) >> 8 = 9
[15] (( 2048 + 256 ) + 128) >> 8 = 9

